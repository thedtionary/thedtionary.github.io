{"ast":null,"code":"var _jsxFileName = \"C:\\\\DANE-ZUZA\\\\dicktionary\\\\dicktionary_code\\\\src\\\\pages\\\\Term.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useParams } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport image from '../images/posters.png';\nimport { Link } from \"react-router-dom\";\nimport OwnFooter from '../components/OwnFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Term() {\n  _s();\n\n  let {\n    slug\n  } = useParams();\n  const [termList, setTermList] = useState([]);\n  useEffect(() => {\n    Axios.get('https://the-dicktionary.herokuapp.com/api/termsname', {\n      headers: {\n        'name': slug\n      }\n    }).then(data => {\n      console.log(data);\n      setTermList(data.data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      bodyAttributes: {\n        style: 'background-color : #fdea25'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text_header_pink\",\n      children: slug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), termList.map(function (d, idx) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: d.story\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"link_image\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/form\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"link_image\",\n          src: image,\n          alt: \"example\",\n          width: \"439\",\n          height: \"341\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/info',\n        style: {\n          textDecoration: 'none',\n          color: \"#ff48b0\"\n        },\n        children: \"find out more about dicktionary.uk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Term, \"xWnMX7UnaGHLjOJ8OC14PxEn6wc=\", false, function () {\n  return [useParams];\n});\n\n_c = Term;\n\nvar _c;\n\n$RefreshReg$(_c, \"Term\");","map":{"version":3,"sources":["C:/DANE-ZUZA/dicktionary/dicktionary_code/src/pages/Term.js"],"names":["React","useState","useEffect","Axios","useParams","Helmet","image","Link","OwnFooter","Term","slug","termList","setTermList","get","headers","then","data","console","log","catch","err","style","map","d","idx","story","textDecoration","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,MAAI;AAACC,IAAAA;AAAD,MAAUN,SAAS,EAAvB;AAEA,QAAM,CAACO,QAAD,EAAUC,WAAV,IAAyBX,QAAQ,CAAC,EAAD,CAAvC;AAGFC,EAAAA,SAAS,CAAC,MAAI;AACdC,IAAAA,KAAK,CAACU,GAAN,CAAU,qDAAV,EAAgE;AAC9DC,MAAAA,OAAO,EAAE;AACP,gBAAQJ;AADD;AADqD,KAAhE,EAGMK,IAHN,CAGYC,IAAD,IAAQ;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,MAAAA,WAAW,CAACI,IAAI,CAACA,IAAN,CAAX;AACD,KAND,EAMGG,KANH,CAMSC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CANhB;AAOC,GARQ,EAQP,EARO,CAAT;AAUE,sBACE;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,cAAc,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAxB;AAAA;AAAA;AAAA;AAAA,YADD,eAEE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBAAkCX;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,EAIHC,QAAQ,CAACW,GAAT,CAAa,UAASC,CAAT,EAAYC,GAAZ,EAAgB;AACrB,0BAAQ;AAAA,kBAAeD,CAAC,CAACE;AAAjB,SAASD,GAAT;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFP,CAJG,eAUJ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA,QAAC,IAAD;AACA,QAAA,EAAE,EAAC,OADH;AAAA,+BAEU;AAAK,UAAA,SAAS,EAAC,YAAf;AACE,UAAA,GAAG,EAAElB,KADP;AAEE,UAAA,GAAG,EAAC,SAFN;AAGE,UAAA,KAAK,EAAC,KAHR;AAGc,UAAA,MAAM,EAAC;AAHrB;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,cADA,eASQ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,OAAV;AAAmB,QAAA,KAAK,EAAE;AACjBoB,UAAAA,cAAc,EAAE,MADC;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATR;AAAA;AAAA;AAAA;AAAA;AAAA,YAVI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA3CuBlB,I;UACRL,S;;;KADQK,I","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Axios from 'axios'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Helmet from 'react-helmet';\r\nimport image from '../images/posters.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport OwnFooter from '../components/OwnFooter';\r\n\r\nexport default function Term() {\r\n  let {slug}  = useParams();\r\n\r\n  const [termList,setTermList] = useState([]);\r\n\r\n\r\nuseEffect(()=>{\r\nAxios.get('https://the-dicktionary.herokuapp.com/api/termsname',{\r\n  headers: {\r\n    'name': slug\r\n  }}).then((data)=>{\r\n  console.log(data)\r\n  setTermList(data.data)\r\n}).catch(err => console.log(err))\r\n},[])\r\n\r\n  return (\r\n    <div > \r\n     <Helmet bodyAttributes={{style: 'background-color : #fdea25'}}/>\r\n      <h1 className='text_header_pink'>{slug}</h1>\r\n\r\n{termList.map(function(d, idx){\r\n         return (<li key={idx}>{d.story}</li>)\r\n       })}\r\n\r\n\r\n\r\n<div className=\"link_image\">\r\n<Link \r\nto=\"/form\">\r\n          <img className=\"link_image\"\r\n            src={image}\r\n            alt=\"example\"\r\n            width=\"439\" height=\"341\"\r\n          />\r\n        </Link>\r\n        <Link to={'/info'} style={{\r\n                 textDecoration: 'none', \r\n                 color: \"#ff48b0\"\r\n                 }}>find out more about dicktionary.uk</Link>\r\n                 </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}