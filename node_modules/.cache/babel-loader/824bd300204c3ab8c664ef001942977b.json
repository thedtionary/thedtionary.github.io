{"ast":null,"code":"var _jsxFileName = \"C:\\\\DANE-ZUZA\\\\dicktionary\\\\dicktionary_code\\\\src\\\\pages\\\\Term.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Helmet from 'react-helmet';\nimport image from '../images/posters.png';\nimport image2 from '../images/arrow_pink.png';\nimport { Link } from \"react-router-dom\";\nimport OwnFooter from '../components/OwnFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Term() {\n  _s();\n\n  let {\n    slug\n  } = useParams();\n  const [termList, setTermList] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    return history.listen(location => {\n      console.log(`You changed the page to: ${location.pathname}`);\n    });\n  }, [history]);\n  useEffect(() => {\n    Axios.get('https://the-dicktionary.herokuapp.com/api/termsname', {\n      headers: {\n        'name': slug\n      }\n    }).then(data => {\n      console.log(data);\n      setTermList(data.data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      bodyAttributes: {\n        style: 'background-color : #fdea25'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text_header_pink\",\n      children: slug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"back_image\",\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image2,\n        alt: \"example\",\n        width: \"52\",\n        height: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: termList.map(function (d, idx) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one_post\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"date\",\n            children: d.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: d.story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"link_image\",\n      to: \"/form\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"link_image\",\n        src: image,\n        alt: \"example\",\n        width: \"459\",\n        height: \"361\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(OwnFooter, {\n      color: \"#ff48b0\",\n      back: \"#fdea25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Term, \"DwM54QAo0nnSHdNQ6cetlCGyAe8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Term;\n\nvar _c;\n\n$RefreshReg$(_c, \"Term\");","map":{"version":3,"sources":["C:/DANE-ZUZA/dicktionary/dicktionary_code/src/pages/Term.js"],"names":["React","useState","useEffect","Axios","useParams","useHistory","Helmet","image","image2","Link","OwnFooter","Term","slug","termList","setTermList","history","listen","location","console","log","pathname","get","headers","then","data","catch","err","style","map","d","idx","date","story"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Axios from 'axios'\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Helmet from 'react-helmet';\r\nimport image from '../images/posters.png';\r\nimport image2 from '../images/arrow_pink.png';\r\nimport {Link} from \"react-router-dom\";\r\nimport OwnFooter from '../components/OwnFooter';\r\n\r\nexport default function Term() {\r\n  let {slug}  = useParams();\r\n\r\n  const [termList,setTermList] = useState([]);\r\n\r\n  let history = useHistory();\r\nuseEffect(() => {\r\n  return history.listen((location) => { \r\n     console.log(`You changed the page to: ${location.pathname}`) \r\n  }) \r\n},[history])  \r\n\r\nuseEffect(()=>{\r\nAxios.get('https://the-dicktionary.herokuapp.com/api/termsname',{\r\n  headers: {\r\n    'name': slug\r\n  }}).then((data)=>{\r\n  console.log(data)\r\n  setTermList(data.data)\r\n}).catch(err => console.log(err))\r\n},[])\r\n\r\n  return (\r\n    <div > \r\n     <Helmet bodyAttributes={{style: 'background-color : #fdea25'}}/>\r\n      <h1 className='text_header_pink'>{slug}</h1>\r\n      <Link className=\"back_image\"\r\nto=\"/\" > \r\n<img\r\n            src={image2}\r\n            alt=\"example\"\r\n            width=\"52\" height=\"30\"\r\n          />\r\n        </Link>\r\n\r\n<div className='posts'>\r\n{termList.map(function(d, idx){\r\n         return (<div className='one_post'>\r\n           <h1 className='date'>{d.date}</h1>\r\n         <h2 >{d.story}</h2>\r\n         </div>\r\n         )\r\n       })}\r\n\r\n</div>\r\n\r\n\r\n<Link className=\"link_image\"\r\nto=\"/form\" > \r\n          <img className=\"link_image\"\r\n            src={image}\r\n            alt=\"example\"\r\n            width=\"459\" height=\"361\"\r\n          />\r\n        </Link>\r\n        <OwnFooter color=\"#ff48b0\" back='#fdea25'/>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}