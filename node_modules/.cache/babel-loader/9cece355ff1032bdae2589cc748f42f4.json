{"ast":null,"code":"import _slicedToArray from\"C:/DANE-ZUZA/dicktionary/dicktionary/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Axios from'axios';import{useHistory}from\"react-router-dom\";import Helmet from'react-helmet';import TermName from'../components/TermName';import HomeFooter from'../components/HomeFooter';import OwnFooter from'../components/OwnFooter';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Home(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),termList=_useState2[0],setTermList=_useState2[1];var history=useHistory();function handleClick(slug){history.push(\"/term/\"+slug);//window.location.reload()\n}useEffect(function(){Axios.get('https://the-dicktionary.herokuapp.com/api/distinctname').then(function(data){console.log(data);setTermList(data.data);}).catch(function(err){return console.log(err);});},[]);useEffect(function(){return history.listen(function(location){console.log(\"You changed the page to: \".concat(location.pathname));});},[history]);var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),widths=_useState4[0],setWindowWidth=_useState4[1];useEffect(function(){updateDimensions();window.addEventListener('resize',updateDimensions);return function(){return window.removeEventListener('resize',updateDimensions);};},[]);var updateDimensions=function updateDimensions(){var widths=window.innerWidth;setWindowWidth(widths);console.log(widths);};var responsive={size_change:widths>768};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Helmet,{bodyAttributes:{style:'background-color : #ff48b0'}}),termList.map(function(txt){return/*#__PURE__*/_jsx(\"div\",{class:\"container\",children:responsive.size_change?/*#__PURE__*/_jsx(TermName,{onClick:function onClick(){return handleClick(txt);},height:\"100px\",width:\"100px\",radius:\"50%\",size:\"80px \",children:txt}):/*#__PURE__*/_jsx(TermName,{onClick:function onClick(){return handleClick(txt);},height:\"100px\",width:\"100px\",radius:\"50%\",size:\"20px \",children:txt})});})]}),/*#__PURE__*/_jsx(OwnFooter,{color:\"#F7C5DD\",back:\"#ff48b0\"}),/*#__PURE__*/_jsx(HomeFooter,{color:\"#F7C5DD\"})]});}","map":{"version":3,"sources":["C:/DANE-ZUZA/dicktionary/dicktionary/src/pages/Home.js"],"names":["React","useState","useEffect","Axios","useHistory","Helmet","TermName","HomeFooter","OwnFooter","Home","termList","setTermList","history","handleClick","slug","push","get","then","data","console","log","catch","err","listen","location","pathname","widths","setWindowWidth","updateDimensions","window","addEventListener","removeEventListener","innerWidth","responsive","size_change","style","map","txt"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Helmet from 'react-helmet';\r\nimport TermName from '../components/TermName';\r\nimport HomeFooter from '../components/HomeFooter';\r\nimport OwnFooter from '../components/OwnFooter';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [termList,setTermList] = useState([]);\r\n\r\n    let history = useHistory();\r\n    function handleClick(slug) {\r\n        history.push(\"/term/\"+ slug);\r\n        //window.location.reload()\r\n      }\r\n\r\nuseEffect(()=>{\r\nAxios.get('https://the-dicktionary.herokuapp.com/api/distinctname').then((data)=>{\r\n    console.log(data)\r\n    setTermList(data.data)\r\n}).catch(err => console.log(err))\r\n},[])\r\n\r\n\r\nuseEffect(() => {\r\n  return history.listen((location) => { \r\n     console.log(`You changed the page to: ${location.pathname}`) \r\n  }) \r\n},[history])  \r\n\r\nconst [widths, setWindowWidth] = useState(0)\r\nuseEffect(() => { \r\n\r\n  updateDimensions();\r\n\r\n  window.addEventListener('resize', updateDimensions);\r\n  return () => \r\n    window.removeEventListener('resize',updateDimensions);\r\n }, [])\r\n\r\n const updateDimensions = () => {\r\n   const widths = window.innerWidth\r\n   setWindowWidth(widths)\r\n   console.log(widths);\r\n\r\n }\r\n\r\n const responsive = {\r\n    size_change: widths > 768\r\n    \r\n  }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n            <Helmet bodyAttributes={{style: 'background-color : #ff48b0'}}/>\r\n            {termList.map(txt => \r\n            <div class=\"container\">\r\n                {responsive.size_change?\r\n <TermName onClick={() => handleClick(txt)}\r\n height = \"100px\" width = \"100px\" radius = \"50%\"  size = \"80px \"children = {txt} ></TermName>\r\n:\r\n            <TermName onClick={() => handleClick(txt)}\r\n             height = \"100px\" width = \"100px\" radius = \"50%\"  size = \"20px \"children = {txt} ></TermName>}\r\n            </div>\r\n            )}\r\n            </div>\r\n            \r\n            <OwnFooter color = \"#F7C5DD\" back=\"#ff48b0\"/>\r\n            <HomeFooter color = \"#F7C5DD\" />\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}